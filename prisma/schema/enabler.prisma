model Enabler {
  id            String   @id @default(uuid()) @db.UniqueIdentifier
  userId        String   @unique @db.VarChar(128)
  experience    String  @db.NVarChar(50)
  description   String?  @db.NVarChar(500)
  hourRate      Float    @default(0) @db.Float
  createdAt     DateTime @default(now()) @db.DateTime2
  updatedAt     DateTime @updatedAt @db.DateTime2

  portfolioImages EnablerPortfolioImage[]
  EnablerAddress EnablerAddress[]
  
  user          User     @relation(fields: [userId], references: [id])
}



model EnablerAddress {
  id            String   @id @default(uuid()) @db.UniqueIdentifier
  enablerId     String   @db.UniqueIdentifier
  addressType   String   @db.VarChar(20) @default("Home")
  isDefault     Boolean  @default(false)
  address       String   @db.NVarChar(200)
  city          String   @db.NVarChar(50)
  state         String   @db.NVarChar(50)
  zipCode       String   @db.NVarChar(50)
  latitude      Float    @db.Float
  longitude     Float    @db.Float
  createdAt     DateTime @default(now()) @db.DateTime2
  updatedAt     DateTime @updatedAt @db.DateTime2

  enabler      Enabler @relation(fields: [enablerId], references: [id])
}


model EnablerPortfolioImage {
  id          String   @id @default(uuid()) @db.UniqueIdentifier
  enablerId   String   @db.UniqueIdentifier
  imageUrl    String   @db.VarChar(500)
  order       Int      @db.Int
  createdAt   DateTime @default(now()) @db.DateTime2
  updatedAt   DateTime @updatedAt @db.DateTime2
  enabler     Enabler  @relation(fields: [enablerId], references: [id], onDelete: Cascade)

  @@unique([enablerId, order]) 
  @@index([enablerId])
}